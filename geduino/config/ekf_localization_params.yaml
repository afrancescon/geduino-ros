# ekf_localization_params.yaml
#
# Copyright (C) 2016 Alessandro Francescon
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# The real-valued frequency, in Hz, at which the filter produces a state estimate.
# Note that the filter will not begin computation until it receives at least one message from one of the inputs.
frequency: 10

# If your robot is operating in a planar environment and you're comfortable with ignoring 
# the subtle variations in the ground (as reported by an IMU), then set this to true. 
# It will fuse 0 values for all 3D variables (Z, roll, pitch, and their respective velocities and accelerations). 
# This keeps the covariances for those values from exploding while ensuring that your robot's 
# state estimate remains affixed to the X-Y plane. 
two_d_mode: true

# If you are only fusing continuous position data such as wheel encoder odometry, visual odometry, 
# or IMU data, set world_frame to your odom_frame value. This is the default behavior for the state 
# estimation nodes in robot_localization, and the most common use for it. 
odom_frame: odom
base_link_frame: base_link
world_frame: odom

# For each sensor, users need to define this parameter based on the message type.
# The index for each parameter name is 0-based (e.g., odom0, odom1, etc.) and must be defined sequentially 
# (e.g., do NOT use pose0 and pose2 if you have not defined pose1).
# The values for each parameter are the topic name for that sensor. 
imu0: /imu
odom0: /odom

# For each of the sensor messages defined above that contain pose information, users can specify whether
# the pose variables should be integrated differentially. If a given value is set to true, then for a
# measurement at time t from the sensor in question, we first subtract the measurement at time t-1, and
# convert the resulting value to a velocity. This setting is especially useful if your robot has two sources
# of absolute pose information, e.g., yaw measurements from odometry and an IMU. In that case, if the variances
# on the input sources are not configured correctly, these measurements may get out of sync with one another 
# and cause oscillations in the filter, but by integrating one or both of them differentially, we avoid this scenario.
# Users should take care when using this parameter for orientation data, as the conversion to velocity means that
# the covariance for orientation state variables will grow without bound (unless another source of absolute
# orientation data is being fused). If you simply want all of your pose variables to start at 0, then please
# use the _relative parameter. Please note that if you are fusing GPS information via navsat_transform_node
# or utm_transform_node, you should make sure that the _differential setting is false.
imu0_differential: true
odom0_differential: false

# If fusing accelerometer data from IMUs, this parameter determines whether or not acceleration due
# to gravity is removed from the acceleration measurement before fusing it. Please note, however, that it
# assumes that the IMU that is providing the acceleration data is also producing an absolute orientation.
# The orientation data is required to correctly remove gravitational acceleration. 
imu0_remove_gravitational_acceleration: false

# If true, the state estimation nodes in robot_localization will publish diagnostic messages to the 
# /diagnostics topic. This is useful for debugging your configuration and sensor data.
print_diagnostics: false


#             X,     Y,     Z,
#             Roll,  Pitch, Yaw,
#             Vx,    Vy,    Vz,
#             Vroll, Vpitch,Vyaw,
#             Ax,    Ay,    Az 
imu0_config: [false, false, false,
              false, false, true,
              false, false, false,
              false, false, true,
              false, false, false]

#              X,     Y,     Z,
#              Roll,  Pitch, Yaw,
#              Vx,    Vy,    Vz,
#              Vroll, Vpitch,Vyaw,
#              Ax,    Ay,    Az 
odom0_config: [true, true, false,
               false, false, true,
               true, true, false,
               false, false, true,
               false, false, false]
