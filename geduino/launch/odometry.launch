<!--
 odometry.launch

 Copyright (C) 2018 Alessandro Francescon

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<launch>

  <group ns="odometry">

    <!-- The nodelet manager -->
    <node machine="geduino2" pkg="nodelet" type="nodelet" name="odometry_nodelet_manager" args="manager" respawn="true" output="log"/>

    <!-- The MD25 driver -->
    <node machine="geduino2" pkg="nodelet" type="nodelet" name="md25_driver" args="load md25/MD25DriverNodelet odometry_nodelet_manager" respawn="true" output="log">
      <rosparam file="$(find geduino)/config/odometry_params.yaml" command="load" />
    </node>

    <!-- The MD25 odometry -->
    <node machine="geduino2" pkg="nodelet" type="nodelet" name="md25_odometry" args="load md25/MD25OdometryNodelet odometry_nodelet_manager" respawn="true" output="log">
      <rosparam file="$(find geduino)/config/odometry_params.yaml" command="load" />
    </node>

    <!-- The MD25 controller -->
    <node machine="geduino2" pkg="nodelet" type="nodelet" name="md25_controller" args="load md25/MD25ControllerNodelet odometry_nodelet_manager" respawn="true" output="log">
      <rosparam file="$(find geduino)/config/odometry_params.yaml" command="load" />
      <remap from="cmd_vel" to="/cmd_vel" />
    </node>

    <!-- The odometry euler -->
    <node machine="geduino2" pkg="md25" type="odom_to_euler_node" name="odom_to_euler" respawn="true" output="log">
    </node>

    <!-- The filtered odometry euler -->
    <node machine="geduino2" pkg="md25" type="odom_to_euler_node" name="odom_filtered_to_euler" respawn="true" output="log">
        <remap from="odom" to="odom_filtered" />
        <remap from="euler" to="euler_filtered" />
    </node>

  </group>

</launch>
